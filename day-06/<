package main

import (
	"fmt"
	"os"
	"strconv"
	"strings"
	"time"
)

type Ranking struct {
	value       int
	greaterThan *Ranking
	lowerThank  *Ranking
}

func check(e error) {
	if e != nil {
		panic(e)
	}
}

func getLines(filename string) []string {
	data, err := os.ReadFile(filename)
	check(err)
	return strings.Split(string(data), "\n")
}

func secondPart(lines []string) int {
	xmasCount := 0
	return xmasCount
}

func firstPart(lines []string, debug bool) int {
	middlesCount := 0
	startSorting := false
	rankings := make([]Ranking, 0, 99)

	for n, line := range lines {
		if line == "" {
			continue
		}

		if line[0] == 'X' {
			startSorting = true
			continue
		}

		// Building sort order
		if !startSorting {
			a, errA := strconv.Atoi(string(line[0]) + string(line[1]))
			b, errB := strconv.Atoi(string(line[3]) + string(line[4]))
			check(errA)
			check(errB)

			fmt.Printf("%v", rankings[n]

			if !ok {
			}

			continue
		}

		// Getting the numbers list
		// fmt.Println(result)
	}

	return middlesCount
}

func main() {
	debug := false
	lines := getLines("./test_input.txt")
	start := time.Now()
	fmt.Printf("First part result: %v (%v)\n", firstPart(lines, debug), time.Since(start))
	start = time.Now()
	fmt.Printf("Second part result: %v (%v)\n", secondPart(lines), time.Since(start))
}
